<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kdl.nlfdc.persistence.AsmMapper">

    <!-- assignment表基本操作 -->
    <select id="getAsm" parameterType="String" resultType="Asm">
        select
            *
        from
            asm
        where
            asm.asmId = #{asmId}
    </select>

    <insert id="insertAsm" useGeneratedKeys="true" keyProperty="asmId" parameterType="Asm">
        insert into asm
            (asmName, creatorId, asmType, asmScore, 
            createTime, startTime, finishTime, limitTime, 
            subjectId, bookId, chapterId, sectionId, isFree, isMultiMedia)
        values
            (#{asmName}, #{creatorId}, #{asmType}, #{asmScore},
            #{createTime}, #{startTime}, #{finishTime}, #{limitTime}, 
            #{subjectId}, #{bookId}, #{chapterId}, #{sectionId}, #{isFree}, #{isMultiMedia})
    </insert>

    <update id="updateAsm" parameterType="Asm">
        update
            asm
        set
            asmName = #{asmName},
            creatorId = #{creatorId},
            asmType = #{asmType},
            asmScore = #{asmScore},
            createTime = #{createTime},
            startTime = #{startTime},
            finishTime = #{finishTime},
            limitTime = #{limitTime},
            subjectId = #{subjectId},
            bookId = #{bookId},
            chapterId = #{chapterId},
            sectionId = #{sectionId},
            isDeleted = #{isDeleted}, 
            isFree = #{isFree}
        where
            asmId = #{asmId}
    </update>
    
    <update id="deleteAsm" parameterType="int">
    	update 
    		asm
    	set
    		isDeleted = 1
    	where
    	 	asmId = #{asmId }
    </update>

	<!-- edit cjia 2015.1.9 添加老师收藏课本过滤条件，不在当前收藏课本中的过滤掉  -->
    <select id="getTeacherAssignmentCount" parameterType="int" resultType="int">
        select
            count(*)
        from
            asm
        where
            creatorId = #{teaId}
            and isDeleted = 0
            and (
		           asm.bookId in 
		            	(
		                select bookId
		                from tea_book
		                where teaId = #{teaId}
		                )
	                or asm.bookId = 0
            	)	
            <if test="subjectId != 0">
                and subjectId = #{subjectId }
            </if>
    </select>

    <!-- added cjia 2015.3.30 幼教老师网页端获取作业列表 -->
    <select id="getAsmListForYjTea" resultType="Asm">
        select
            *
        from
            asm
        where
            asm.creatorId = #{userId}
            and asm.isDeleted = #{isDeleted}
            <if test="bookId == 0">
            and (
            	asm.bookId in (
               	select bookId
                from tea_book
                where teaId = #{userId} 
            	)
            	or 
            	(
            	asm.bookId = 0	
            	)
            )
            </if>
            <if test="bookId != 0">
                and asm.bookId = #{bookId}
            </if>
            <if test="chapterId != 0">
                and asm.chapterId = #{chapterId}
            </if>
            <if test="sectionId != 0">
                and asm.sectionId = #{sectionId}
            </if>
        order by
            asm.createTime DESC
        limit
            #{limitBegin}, #{pageSize}
    </select>
	
    <select id="getAsmListForYjTeaCount" resultType="int">
        select
            count(*)
        from
            asm
        where
            asm.creatorId = #{userId}
            and asm.isDeleted = #{isDeleted}
            <if test="bookId == 0">
            and asm.bookId in (
            	select bookId
                from tea_book
                where teaId = #{userId}
            )
            </if>
            <if test="bookId != 0">
                and asm.bookId = #{bookId}
            </if>
            <if test="chapterId != 0">
                and asm.chapterId = #{chapterId}
            </if>
            <if test="sectionId != 0">
                and asm.sectionId = #{sectionId}
            </if>
    </select>

    <!-- add cjia 5 2014.7.28 -->
    <insert id="insertClsAsm" parameterType="ClsAsm">
        insert into cls_asm
            (asmId, clsId, teaId, statusId, assignTime, 
            studentCount, submittedCount, correctedCount,
            maxScore, minScore, avrScore, fangCha, biaoZhunCha)
        values
            (#{asmId}, #{clsId}, #{teaId}, #{statusId}, #{assignTime}, 
            #{studentCount}, #{submittedCount}, #{correctedCount},
            #{maxScore}, #{minScore}, #{avrScore}, #{fangCha}, #{biaoZhunCha})
    </insert>

    <select id="getClsAsm" resultType="ClsAsm">
        select
            *
        from
            cls_asm, asm
        where
            cls_asm.asmId = #{asmId }
            and clsId = #{clsId }
            and cls_asm.asmId = asm.asmId
    </select>
	
	<!-- edit cjia 2015.1.7  增加班级名称 -->
    <select id="getClsAsmOfAnAsm" resultType="ClsAsm">
        select
            cls_asm.*,asm.*, cls.clsName
        from
            cls_asm 
            join asm 
                on cls_asm.asmId = asm.asmId
            left join cls 
            	on cls_asm.clsId = cls.clsId
        where
            cls_asm.asmId = #{asmId }
        order by
            cls_asm.assignTime DESC
    </select>

    <insert id="insertStuAsmList" parameterType="java.util.List">
        insert into stu_asm
            (asmId, stuId, clsId, teaId, statusId, assignTime,
            beginAnswerTime, endAnswerTime, beginSubmitTime, endSubmitTime,
            beginSendbackTime, endSendbackTime, cycleCount, isSubmitted, isCorrected,
            answerTime, stuAsmScore, ranking)
        values
            <foreach collection="list" item="item" index="index" separator="," >  
            (#{item.asmId},#{item.stuId}, #{item.clsId}, #{item.teaId}, #{item.statusId}, #{item.assignTime},
            #{item.beginAnswerTime}, #{item.endAnswerTime}, #{item.beginSubmitTime}, #{item.endSubmitTime},
            #{item.beginSendbackTime}, #{item.endSendbackTime}, #{item.cycleCount}, #{item.isSubmitted}, #{item.isCorrected},
            #{item.answerTime}, #{item.stuAsmScore}, #{item.ranking})
            </foreach> 
    </insert>

    <select id="getStuAsm" resultType="StuAsm">
        select
            *
        from
            stu_asm 
            join asm using (asmId)
            left join stu_book using (stuId, bookId)
        where
            asmId = #{asmId }
            and clsId = #{clsId }
            and stuId = #{stuId}
    </select>

    <select id="getStuAsmOfAClass" resultType="StuAsm">
        select
            stu_asm.*, 
            asm.*, 
            user.userName as studentName
        from
            stu_asm 
            join asm using (asmId)
            join user on
                stu_asm.stuId = user.userId
        where
            stu_asm.asmId = #{asmId }
            and clsId = #{clsId }
        order by
            asm.createTime DESC
    </select>

    <select id="getStuAsmListForStu" parameterType="int" resultType="StuAsm">
        select
            asm.*, stu_asm.*
        from 
            asm join stu_asm using(asmId) 
        where 
            stu_asm.stuId = #{stuId}
            and asm.isDeleted = 0
            and
            (
                bookId in (
                        select 
                            bookId 
                        from 
                            scm_book 
                            inner join school_scm using (scmId)
                            inner join user using (schoolId)
                        where
                            userId = #{stuId}
                	) 
                or bookId = 0
             )
            <if test="clsId != 0">
	             and stu_asm.clsId = #{clsId}
            </if>
            <if test="startTime != 0">
                and stu_asm.assignTime >= #{startTime}
            </if>
            <if test="endTime != 0">
                and stu_asm.assignTime &lt;= #{endTime}
            </if>
            <if test="asmStatusType == 1">
                and stu_asm.statusId = 10
            </if>
            <if test="asmStatusType == 2">
                and (stu_asm.statusId = 0 or stu_asm.statusId = 1)
            </if>
            <if test="asmStatusType == 3">
                and (stu_asm.statusId > 1 and stu_asm.statusId &lt; 10)
            </if>
            <if test="subjectId != 0">
                and asm.subjectId = #{subjectId}
            </if>
            <if test="bookId != 0">
                and asm.bookId = #{bookId}
            </if>
            <if test="chapterId != 0">
                and asm.chapterId = #{chapterId}
            </if>
            <if test="sectionId != 0">
                and asm.sectionId = #{sectionId}
            </if>
        order by
            stu_asm.assignTime DESC
        limit
            #{beginIndex}, #{pageSize}
    </select>

    <select id="getClsAsmListForTeaClient" parameterType="int" resultType="ClsAsm">
        select
            *
        from
            (
            	select * 
            	from asm 
            	where 
            		creatorId = #{creatorId} 
            		and isDeleted = 0
            		and 
            		(
            		bookId in
            			(
            			select * from 
            				(
            				select bookId
            				from tea_book
            				where teaId = #{creatorId}
            				) as tmp_book_id
            			)
            		or bookId = 0
            		)
            )
            as tmp_asm
            join
            (
            	select * 
            	from cls_asm 
            	where clsId = #{clsId}
            ) as tmp_cls_asm 
            using (asmId)
    </select>

    <update id="updateClsAsm" parameterType="ClsAsm">
        update
            cls_asm
        set
            statusId = #{statusId},
            studentCount = #{studentCount },
            submittedCount = #{submittedCount },
            correctedCount = #{correctedCount },
            maxScore = #{maxScore },
            minScore = #{minScore },
            avrScore = #{avrScore },
            fangCha = #{fangCha },
            biaoZhunCha = #{biaoZhunCha }
        where
            asmId = #{asmId}
            and clsId = #{clsId }
    </update>

    <update id="updateStuAsm" parameterType="StuAsm">
        update
            stu_asm
        set
            statusId = #{statusId },
            beginAnswerTime = #{beginAnswerTime },
            endAnswerTime = #{endAnswerTime },
            beginSubmitTime = #{beginSubmitTime },
            endSubmitTime = #{endSubmitTime },
            beginSendbackTime = #{beginSendbackTime },
            endSendbackTime = #{endSendbackTime },
            cycleCount = #{cycleCount },
            isSubmitted = #{isSubmitted },
            isCorrected = #{isCorrected },
            stuAsmScore = #{stuAsmScore },
            answerTime = #{answerTime },
            ranking = #{ranking }
        where
            asmId = #{asmId}
            and stuId = #{stuId }
            and clsId = #{clsId }
    </update>

	<!-- edit cjia 2015.1.6  添加isDeleted限制  -->
    <select id="getSchoolAssignmentCount" parameterType="int" resultType="int">
        select
            count(*)
        from
            asm
        where
            isDeleted = 0
            <if test="subjectId != 0">
                and subjectId = #{subjectId }
            </if>
            and creatorId in (
                select userId
                from user
                where schoolId = #{schoolId } and userRole = 2
            )
    </select>

	<!-- add cjia 2015.1.6 校长端查看老师作业在各个班级发布情况  -->
	<!-- edit cjia 2015.1.9 添加老师收藏课本过滤条件，不在当前收藏课本中的过滤掉 -->
	<select id="getTeacherAssignmentListByPage" parameterType="int" resultType="MasterStatisticsAssignment">
		select 
			asm.asmId,asm.asmName,user.userName as creatorName
		from 
			asm join user on 
			asm.creatorId = user.userId
		where 
			asm.creatorId  = #{teaId}
			and asm.isDeleted = 0
			and 
				(
					asm.bookId in
						(
		                select bookId
		                from tea_book
		                where teaId = #{teaId}
	            		)
	            	or asm.bookId = 0
				)
			<if test="subjectId != 0">
	            and subjectId = #{subjectId }
	        </if>
	        order by
				asm.createTime DESC
			limit
            	#{limitBegin}, #{pageSize}
	</select>
	
	<!-- add cjia 2015.1.7 校长端查看班级中作业数  -->
	<select id="getClassAssignmentCount" parameterType="int" resultType="int"> 
		select
            count(*)
		from
            cls_asm join asm using (asmId)
        where
			asm.isDeleted = 0			
			and  cls_asm.clsId = #{clsId}
			<if test="subjectId != 0">
                and asm.subjectId = #{subjectId}
			</if>
	</select>

	<select id="getClassAssignmentForMasterStatistics" parameterType="int" resultType="ClsAsm"> 
		select
            *
		from
            cls_asm, asm
        where
			cls_asm.asmId = asm.asmId
            and asm.isDeleted = 0
			and cls_asm.clsId = #{clsId}
			<if test="subjectId != 0">
                and asm.subjectId = #{subjectId}
			</if>
	</select>
		
	<select id="getClassAssignmentOfATeacherForMasterStatistics" parameterType="int" resultType="ClsAsm"> 
		select
            *
		from
            cls_asm, asm
        where
			cls_asm.asmId = asm.asmId
			and asm.creatorId = #{teaId}
            and asm.isDeleted = 0
			<if test="subjectId != 0">
                and asm.subjectId = #{subjectId}
			</if>
	</select>
		
	<!-- add cjia 2015.1.7 校长端查看班级中作业列表  -->
	<select id="getClassAssignmentListByPage" parameterType="int" resultType="MasterStatisticsAssignment">
		select 
			asmId,asmName,userName as creatorName
		from 
			asm join user on 
			asm.creatorId = user.userId
		where 
			asm.asmId in 
			(
				select asmId from cls_asm where clsId = #{clsId}
			)
			and asm.isDeleted = 0
			<if test="subjectId != 0">
	                and subjectId = #{subjectId }
	        </if>
	        order by
				asm.createTime DESC
			limit
            	#{limitBegin}, #{pageSize}
	</select>
	
	<!-- add cjia 2015.4.1 幼教老师插入作业资源关系  -->
	<insert id="insertAsmRes" parameterType="int">
		insert into asm_res 
			(asmId, resId, asmQueId, resNum)
		values 
			(#{asmId}, #{resId}, #{asmQueId}, #{resNum})
	</insert>		
	
	<!-- add cjia 2015.5.26 -->
	<select id="getAsmResList" parameterType="int" resultType="AsmRes">
		select
			 *
		from asm_res 
		where asmId = #{asmId}
		order by resNum asc
	</select>
	
    <select id="getAsmQue" parameterType="String" resultType="AsmQue">
        select 
        	asm_que.*
            , que.contentHtml 
            , que.subjectId 
            , que.bookId 
            , que.chapterId 
            , que.sectionId 
        from 
        	asm_que
        	join que using (queId)
        where 
        	asm_que.asmQueId = #{asmQueId}
    </select>

    <select id="getAsmQueOfAnAsm" parameterType="String" resultType="AsmQue">
        select 
            asm_que.*
            , que.contentHtml 
            , que.subjectId 
            , que.bookId 
            , que.chapterId 
            , que.sectionId 
        from 
        	asm_que
        	join que using (queId)
        where 
            asm_que.asmId = #{asmId}
    </select>

    <!-- add cjia 2015.4.1 插入一条asmQue -->
    <insert id="insertAsmQue" useGeneratedKeys="true" keyProperty="asmQueId" parameterType="AsmQue" >
    	insert into asm_que
            (asmId, queId, queNum, queScore, subScore)
        values
            (#{asmId}, #{queId}, #{queNum}, #{queScore}, #{subScore})
    </insert>

    <select id="getStuAnswerItem" resultType="StuAnswerItem">
        select
            *
        from
            stu_answer_item 
        where
            asmId = #{asmId}
            and clsId = #{clsId}
            and stuId = #{stuId}
            and asmQueId = #{asmQueId}
            and answerNum = #{answerNum}
    </select>
    
    <!-- add cjia 2015.4.9 查询出某个幼教家长一份作业作答包含的文件  -->
    <select id="getStuAnswerItemList" resultType="StuAnswerItem">
        select
            *
        from
            stu_answer_item 
        where
            asmId = #{asmId}
            and clsId = #{clsId}
            and stuId = #{stuId}
        order by 
        	answerNum ASC
    </select>

    <insert id="insertStuAnswerItem" parameterType="StuAnswerItem">
        insert into stu_answer_item
            (asmId, clsId, stuId, asmQueId, 
            answerNum, answerType, answerItem, 
            createTime, cycleNum, isPiGai)
        values
            (#{asmId}, #{clsId}, #{stuId}, #{asmQueId}, 
            #{answerNum}, #{answerType}, #{answerItem}, 
            #{createTime}, #{cycleNum}, #{isPiGai})
    </insert>

	<select id="getAsmNeedCorrectedCountInAllClass" parameterType="int" resultType="int">
		select
			ifnull( sum(submittedCount) - sum(correctedCount), 0)
		from 
			cls_asm
		where 
			asmId = #{asmId }
	</select>
	
	<select id="getOverFinishTimeNeedCorrectStuAsm" parameterType="int" resultType="StuAsm">
		select asmId, stuId, clsId from stu_asm 
		where asmId in (
			select asmId from asm 
			where creatorId in (select userId from user where userRole = 9)
			and (unix_timestamp() - finishTime) &gt;  #{expireTime }
			and (unix_timestamp() - finishTime) &lt; #{limitExpireTime}
		)
		and statusId in (
			4,5,6,7
		)
	</select>
	
</mapper>